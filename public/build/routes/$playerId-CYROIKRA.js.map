{
  "version": 3,
  "sources": ["../../../app/routes/$playerId.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/$playerId.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/$playerId.tsx\");\n  import.meta.hot.lastModified = \"1713411937375.886\";\n}\n// REMIX HMR END\n\n//griffbl01\nimport { json } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport React from \"react\";\nimport { getPlayer, getWilliams } from \"../services/basketball-reference.server\";\nexport const loader = async ({\n  params,\n  request\n}) => {\n  const williams = await getWilliams(params.playerId || \"\");\n  const name = await getPlayer(params.playerId || \"\");\n  return json({\n    williams,\n    name\n  });\n};\nexport default function Player() {\n  _s();\n  const {\n    williams,\n    name\n  } = useLoaderData();\n  return <div className=\"container\">\n      <h1>{`${name} has played with ${williams.length} Williams`}</h1>\n      <ol>\n        {williams.map(x => <li key={x}>{x}</li>)}\n      </ol>\n      <Link to=\"/\">Check Another Player's Williams Number</Link>\n    </div>;\n}\n_s(Player, \"7JB7q/h8RDLcIVczNKBch0Ewgjg=\", false, function () {\n  return [useLoaderData];\n});\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAsBA,kBAAqB;AAGrB,kCAAuC;AAmBjC;AA3CN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,+BAAiC,EAAE;AAAA,EAC5E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA0B;AAC1B,cAAY,IAAI,eAAe;AACjC;AAmBe,SAAR,SAA0B;AAC/B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,SAAI,WAAU,aAClB;AAAA,uDAAC,QAAI,aAAG,wBAAwB,SAAS,qBAAzC;AAAA;AAAA;AAAA;AAAA,WAA2D;AAAA,IAC3D,mDAAC,QACE,mBAAS,IAAI,OAAK,mDAAC,QAAY,eAAJ,GAAT;AAAA;AAAA;AAAA;AAAA,WAAe,CAAK,KADzC;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,QAAK,IAAG,KAAI,sDAAb;AAAA;AAAA;AAAA;AAAA,WAAmD;AAAA,OALhD;AAAA;AAAA;AAAA;AAAA,SAML;AACJ;AACA,GAAG,QAAQ,gCAAgC,OAAO,WAAY;AAC5D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,QAAQ;AAEzB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
